package views

import (
	_ "SkatCRM-Tiny/internal/backend/api"
	_ "SkatCRM-Tiny/internal/backend/database/entities"
	_ "SkatCRM-Tiny/internal/frontend/templates/components"
)

// TODO
templ clientsButtonAddClientTempl() {
	<div class="m-0 sm:m-4">
		<div class="text-3xl">HTMX Tailwind Examples</div>
		<div class="text-2xl my-10">Example Modal with Transitions</div>
		<button
			class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded"
			href="#"
			hx-get="/modal"
			hx-target="#modal"
		>Show Modal</button>
		<div id="modal-container" hx-get="/clients" hx-trigger="click" hx-swap="innerHTML"></div>
	</div>
}

// TODO
templ ClientsModalAddClientTempl() {
	<!-- This example is adapted from https://tailwindui.com/components/application-ui/overlays/modal-dialogs -->
	<div id="modal" class="relative z-10" aria-labelledby="modal-title" role="dialog" aria-modal="true">
		<div
			id="modal-background"
			class="duration-300 opacity-100 fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity"
			aria-hidden="true"
		></div>
		<div class="fixed inset-0 z-10 w-screen overflow-y-auto">
			<div class="flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0">
				<div
					id="modal-panel"
					class="duration-300 opacity-100 translate-y-0 sm:scale-100 relative transform overflow-hidden rounded-lg bg-white text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg"
				>
					<div class="bg-white px-4 pb-4 pt-5 sm:p-6 sm:pb-4">
						<div class="sm:flex sm:items-start">
							<div
								class="mx-auto flex h-12 w-12 flex-shrink-0 items-center justify-center rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10"
							>
								<svg
									class="h-6 w-6 text-red-600"
									fill="none"
									viewBox="0 0 24 24"
									stroke-width="1.5"
									stroke="currentColor"
									aria-hidden="true"
									data-slot="icon"
								>
									<path
										stroke-linecap="round"
										stroke-linejoin="round"
										d="M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126ZM12 15.75h.007v.008H12v-.008Z"
									></path>
								</svg>
							</div>
							<div class="mt-3 text-center sm:ml-4 sm:mt-0 sm:text-left">
								<h3 class="text-base font-semibold text-gray-900" id="modal-title">Deactivate account</h3>
								<div class="mt-2">
									<p class="text-sm text-gray-500">
										Are you sure you want to deactivate your account? All of your data will
										be permanently removed. This action cannot be undone.
									</p>
								</div>
							</div>
						</div>
					</div>
					<div class="bg-gray-50 px-4 py-3 sm:flex sm:flex-row-reverse sm:px-6">
						<button
							type="button"
							class="inline-flex w-full justify-center rounded-md bg-red-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-red-500 sm:ml-3 sm:w-auto"
							hx-get="modal_closed.html"
							hx-swap="morph"
							hx-target="#modal"
						>Deactivate</button>
						<button
							type="button"
							class="mt-3 inline-flex w-full justify-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50 sm:mt-0 sm:w-auto"
							hx-get="modal_closed.html"
							hx-swap="morph"
							hx-target="#modal"
						>Cancel</button>
					</div>
				</div>
			</div>
		</div>
	</div>
}

templ ClientsTempl() {
	@clientsButtonAddClientTempl()
	// <div class="overflow-x-auto">
	// 	<table class="table-auto w-full text-left">
	// 		<!-- head -->
	// 		<thead class="bg-gray-50 border-b-2 border-gray-200">
	// 			<tr>
	// 				<th class="px-4 py-2">Id</th>
	// 				<th class="px-4 py-2">Id2</th>
	// 				<th class="px-4 py-2">Метка</th>
	// 				<th class="px-4 py-2">ФИО</th>
	// 				<th class="px-4 py-2">Телефон</th>
	// 				<th class="px-4 py-2">Адрес</th>
	// 				<th class="px-4 py-2">Эл.почта</th>
	// 				<th class="px-4 py-2">Действия</th>
	// 			</tr>
	// 		</thead>
	// 		<tbody hx-confirm="Вы уверены?" hx-target="closest tr">
	// 			{{ count := 10 }}
	// 			{{ offset := 0 }}
	// 			{{ clients, _ := api.FetchEntities[entities.ClientInfo]("/api/v1/clients", count, offset) }}
	// 			for _, client := range clients {
	// 				<tr>
	// 					<td>{ client.Id }</td>
	// 					<td>{ client.Id2 }</td>
	// 					<td>{ client.Mark }</td>
	// 					<td>{ client.FullName }</td>
	// 					<td>{ client.Phones }</td>
	// 					<td>{ client.LegalAddress }</td>
	// 					<td>{ client.Email }</td>
	// 					<td class="px-4 py-2 flex justify-center">
	// 						<button class="btn bg-red-400 text-white px-2 py-1 rounded" hx-delete={ "/api/v1/client/" + client.Id }>Delete</button>
	// 					</td>
	// 				</tr>
	// 			}
	// 		</tbody>
	// 	</table>
	// 	<!-- @components.Pagination(currPage, clientCount, "clients") -->
	// </div>
}
